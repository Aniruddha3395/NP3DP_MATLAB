function [fnew] = Identify_Bottom_Layer(v,f,n)

% this function identifies the vertices of bottom layer first based on the
% normal direction

% INPUT = vertices (3n-by-3 matrix), faces (n-by-3 matrix) and
% normals (n-by-3 matrix) generated by the STL file.
% OUTPUT = vertices of the of the bottom surface (m-by-3 matrix)

indexv = [1:size(v,1)]';        %indexing v
indexn = [1:size(n,1)]';        %indexing n...same as indexing f
nnew = [n,f,indexn];
vnew = [v,indexv];
store = [];
% storing index of only those normals whose z direction is negative,
% i.e normal pointing downwards... i.e normals from bottom layer
for i = 1:size(nnew,1)
    if nnew(i,3)<0
        store =[store;nnew(i,:)];
    end
end

% using index of those normals to get the faces and hence the points
% associated with those faces.
fnew = [store(:,4),store(:,5),store(:,6)];
fnew1 = [fnew(:,1);fnew(:,2);fnew(:,3)];
vnew1 = unique(fnew1);            % removing the repeating points
storenew =[];

% getting unique bottom points and their co-ordinates
for i = 1:size(vnew1,1)
    for j =1:size(vnew,1)
        if vnew(j,4)==vnew1(i,1)
            storenew = [storenew;vnew(j,:)];
        end
    end
end
basepts = [storenew(:,1),storenew(:,2),storenew(:,3)];
basepts = unique(basepts,'rows');          % removing the repeating co-ordinates

% plot showing scatter points data for bottom layer
figure('Name','Bottom Surface Scatterplot')
scatter3(basepts(:,1),basepts(:,2),basepts(:,3),'.')
xlabel('x-axis');
ylabel('y-axis');
zlabel('z-axis');


end